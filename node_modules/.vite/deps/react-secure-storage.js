import {
  require_aes,
  require_core
} from "./chunk-NE3JG2EU.js";
import {
  __commonJS
} from "./chunk-PR4QN5HX.js";

// node_modules/crypto-js/enc-utf8.js
var require_enc_utf8 = __commonJS({
  "node_modules/crypto-js/enc-utf8.js"(exports, module) {
    (function(root, factory) {
      if (typeof exports === "object") {
        module.exports = exports = factory(require_core());
      } else if (typeof define === "function" && define.amd) {
        define(["./core"], factory);
      } else {
        factory(root.CryptoJS);
      }
    })(exports, function(CryptoJS) {
      return CryptoJS.enc.Utf8;
    });
  }
});

// node_modules/react-secure-storage/dist/envHelper.js
var require_envHelper = __commonJS({
  "node_modules/react-secure-storage/dist/envHelper.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var getHashKey = function getHashKey2() {
      var value = null;
      try {
        if (typeof Cypress != "undefined") {
          value = Cypress.env("SECURE_LOCAL_STORAGE_HASH_KEY") || Cypress.env("REACT_APP_SECURE_LOCAL_STORAGE_HASH_KEY") || Cypress.env("NEXT_PUBLIC_SECURE_LOCAL_STORAGE_HASH_KEY") || Cypress.env("VITE_SECURE_LOCAL_STORAGE_HASH_KEY");
        } else if (typeof process.env != "undefined") {
          value = process.env.SECURE_LOCAL_STORAGE_HASH_KEY || process.env.REACT_APP_SECURE_LOCAL_STORAGE_HASH_KEY || process.env.NEXT_PUBLIC_SECURE_LOCAL_STORAGE_HASH_KEY || process.env.VITE_SECURE_LOCAL_STORAGE_HASH_KEY;
        } else {
          console.warn("react-secure-storage : process is not defined! Just a warning!");
        }
      } catch (ex) {
        return null;
      }
      return value;
    };
    var getStoragePrefix = function getStoragePrefix2() {
      var value = null;
      try {
        if (typeof Cypress != "undefined") {
          value = Cypress.env("SECURE_LOCAL_STORAGE_PREFIX") || Cypress.env("REACT_APP_SECURE_LOCAL_STORAGE_PREFIX") || Cypress.env("NEXT_PUBLIC_SECURE_LOCAL_STORAGE_PREFIX") || Cypress.env("VITE_SECURE_LOCAL_STORAGE_PREFIX");
        } else if (typeof process.env != "undefined") {
          value = process.env.SECURE_LOCAL_STORAGE_PREFIX || process.env.REACT_APP_SECURE_LOCAL_STORAGE_PREFIX || process.env.NEXT_PUBLIC_SECURE_LOCAL_STORAGE_PREFIX || process.env.VITE_SECURE_LOCAL_STORAGE_PREFIX;
        } else {
          console.warn("react-secure-storage : process is not defined! Just a warning!");
        }
      } catch (ex) {
        return null;
      }
      return value;
    };
    var getDisabledKeys = function getDisabledKeys2() {
      var value = null;
      try {
        if (typeof Cypress != "undefined") {
          value = Cypress.env("SECURE_LOCAL_STORAGE_DISABLED_KEYS") || Cypress.env("REACT_APP_SECURE_LOCAL_STORAGE_DISABLED_KEYS") || Cypress.env("NEXT_PUBLIC_SECURE_LOCAL_STORAGE_DISABLED_KEYS") || Cypress.env("VITE_SECURE_LOCAL_STORAGE_DISABLED_KEYS");
        } else if (typeof process.env != "undefined") {
          value = process.env.SECURE_LOCAL_STORAGE_DISABLED_KEYS || process.env.REACT_APP_SECURE_LOCAL_STORAGE_DISABLED_KEYS || process.env.NEXT_PUBLIC_SECURE_LOCAL_STORAGE_DISABLED_KEYS || process.env.VITE_SECURE_LOCAL_STORAGE_DISABLED_KEYS;
        } else {
          console.warn("react-secure-storage : process is not defined! Just a warning!");
        }
      } catch (ex) {
        return null;
      }
      return value;
    };
    var envHelper = {
      getHashKey,
      getStoragePrefix,
      getDisabledKeys
    };
    var _default = envHelper;
    exports.default = _default;
  }
});

// node_modules/murmurhash-js/murmurhash3_gc.js
var require_murmurhash3_gc = __commonJS({
  "node_modules/murmurhash-js/murmurhash3_gc.js"(exports, module) {
    function murmurhash3_32_gc(key, seed) {
      var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;
      remainder = key.length & 3;
      bytes = key.length - remainder;
      h1 = seed;
      c1 = 3432918353;
      c2 = 461845907;
      i = 0;
      while (i < bytes) {
        k1 = key.charCodeAt(i) & 255 | (key.charCodeAt(++i) & 255) << 8 | (key.charCodeAt(++i) & 255) << 16 | (key.charCodeAt(++i) & 255) << 24;
        ++i;
        k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;
        k1 = k1 << 15 | k1 >>> 17;
        k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;
        h1 ^= k1;
        h1 = h1 << 13 | h1 >>> 19;
        h1b = (h1 & 65535) * 5 + (((h1 >>> 16) * 5 & 65535) << 16) & 4294967295;
        h1 = (h1b & 65535) + 27492 + (((h1b >>> 16) + 58964 & 65535) << 16);
      }
      k1 = 0;
      switch (remainder) {
        case 3:
          k1 ^= (key.charCodeAt(i + 2) & 255) << 16;
        case 2:
          k1 ^= (key.charCodeAt(i + 1) & 255) << 8;
        case 1:
          k1 ^= key.charCodeAt(i) & 255;
          k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;
          k1 = k1 << 15 | k1 >>> 17;
          k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;
          h1 ^= k1;
      }
      h1 ^= key.length;
      h1 ^= h1 >>> 16;
      h1 = (h1 & 65535) * 2246822507 + (((h1 >>> 16) * 2246822507 & 65535) << 16) & 4294967295;
      h1 ^= h1 >>> 13;
      h1 = (h1 & 65535) * 3266489909 + (((h1 >>> 16) * 3266489909 & 65535) << 16) & 4294967295;
      h1 ^= h1 >>> 16;
      return h1 >>> 0;
    }
    if (typeof module !== "undefined") {
      module.exports = murmurhash3_32_gc;
    }
  }
});

// node_modules/react-secure-storage/dist/utils.js
var require_utils = __commonJS({
  "node_modules/react-secure-storage/dist/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getSecurePrefix = exports.getDisabledKeys = exports.FINGERPRINT_KEYS = void 0;
    var _envHelper = _interopRequireDefault(require_envHelper());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var getSecurePrefix = function getSecurePrefix2() {
      var KEY_PREFIX = _envHelper.default.getStoragePrefix() || "@secure.";
      if (!KEY_PREFIX.endsWith(".")) return KEY_PREFIX + ".";
      return KEY_PREFIX;
    };
    exports.getSecurePrefix = getSecurePrefix;
    var FINGERPRINT_KEYS = {
      USERAGENT: "UserAgent",
      SCREEN_PRINT: "ScreenPrint",
      PLUGINS: "Plugins",
      FONTS: "Fonts",
      LOCAL_STORAGE: "LocalStorage",
      SESSION_STORAGE: "SessionStorage",
      TIMEZONE: "TimeZone",
      LANGUAGE: "Language",
      SYSTEM_LANGUAGE: "SystemLanguage",
      COOKIE: "Cookie",
      CANVAS: "Canvas",
      HOSTNAME: "Hostname"
    };
    exports.FINGERPRINT_KEYS = FINGERPRINT_KEYS;
    var getDisabledKeys = function getDisabledKeys2() {
      var DISABLED_KEYS = _envHelper.default.getDisabledKeys() || "";
      if (DISABLED_KEYS === "") return [];
      var allOptions = [FINGERPRINT_KEYS.USERAGENT, FINGERPRINT_KEYS.SCREEN_PRINT, FINGERPRINT_KEYS.PLUGINS, FINGERPRINT_KEYS.FONTS, FINGERPRINT_KEYS.LOCAL_STORAGE, FINGERPRINT_KEYS.SESSION_STORAGE, FINGERPRINT_KEYS.TIMEZONE, FINGERPRINT_KEYS.LANGUAGE, FINGERPRINT_KEYS.SYSTEM_LANGUAGE, FINGERPRINT_KEYS.COOKIE, FINGERPRINT_KEYS.CANVAS, FINGERPRINT_KEYS.HOSTNAME];
      var response = [];
      DISABLED_KEYS.split("|").forEach(function(key) {
        if (key === "") {
        } else if (allOptions.includes(key)) response.push(key);
        else console.warn("react-secure-storage : ".concat(key, " is not present in the available disabled keys options! Please go through the documentation"));
      });
      return response;
    };
    exports.getDisabledKeys = getDisabledKeys;
  }
});

// node_modules/react-secure-storage/dist/fingerprint.lib.js
var require_fingerprint_lib = __commonJS({
  "node_modules/react-secure-storage/dist/fingerprint.lib.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _murmurhash3_gc = _interopRequireDefault(require_murmurhash3_gc());
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    var ClientJS = function() {
      function ClientJS2() {
        _classCallCheck(this, ClientJS2);
      }
      _createClass(ClientJS2, [{
        key: "getFingerprint",
        value: (
          //
          // MAIN METHODS
          //
          // Get Fingerprint.  Return a 32-bit integer representing the browsers fingerprint.
          function getFingerprint() {
            var bar = "|";
            var disabledKeys = (0, _utils.getDisabledKeys)();
            var key = "";
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.USERAGENT)) {
              key += navigator.userAgent + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.HOSTNAME)) {
              key += window.location.hostname + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.SCREEN_PRINT)) {
              key += this.getScreenPrint() + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.PLUGINS)) {
              key += this.getPlugins() + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.FONTS)) {
              key += this.getFonts() + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.LOCAL_STORAGE)) {
              key += this.isLocalStorage() + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.SESSION_STORAGE)) {
              key += this.isSessionStorage() + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.TIMEZONE)) {
              key += this.getTimeZone() + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.LANGUAGE)) {
              key += this.getLanguage() + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.SYSTEM_LANGUAGE)) {
              key += this.getSystemLanguage() + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.COOKIE)) {
              key += this.isCookie() + bar;
            }
            if (!disabledKeys.includes(_utils.FINGERPRINT_KEYS.CANVAS)) {
              key += this.getCanvasPrint();
            }
            if (key.endsWith(bar)) key = key.substring(0, key.length - 1);
            var seed = 256;
            return (0, _murmurhash3_gc.default)(key, seed);
          }
        )
        //
        // SCREEN METHODS
        //
        // Get Screen Print.  Return a string containing screen information.
      }, {
        key: "getScreenPrint",
        value: function getScreenPrint() {
          return "Color Depth: " + this.getColorDepth() + ", Device XDPI: " + this.getDeviceXDPI() + ", Device YDPI: " + this.getDeviceYDPI();
        }
        // Get Color Depth.  Return a string containing the color depth.
      }, {
        key: "getColorDepth",
        value: function getColorDepth() {
          return window.screen.colorDepth;
        }
        // Get Current Resolution.  Return a string containing the current resolution.
      }, {
        key: "getCurrentResolution",
        value: function getCurrentResolution() {
          return window.screen.width + "x" + window.screen.height;
        }
        // Get Available Resolution.  Return a string containing the available resolution.
      }, {
        key: "getAvailableResolution",
        value: function getAvailableResolution() {
          return window.screen.availWidth + "x" + window.screen.availHeight;
        }
        // Get Device XPDI.  Return a string containing the device XPDI.
      }, {
        key: "getDeviceXDPI",
        value: function getDeviceXDPI() {
          return "";
        }
        // Get Device YDPI.  Return a string containing the device YDPI.
      }, {
        key: "getDeviceYDPI",
        value: function getDeviceYDPI() {
          return "";
        }
        //
        // PLUGIN METHODS
        //
        // Get Plugins.  Return a string containing a list of installed plugins.
      }, {
        key: "getPlugins",
        value: function getPlugins() {
          var pluginsList = "";
          for (var i = 0; i < navigator.plugins.length; i++) {
            if (i === navigator.plugins.length - 1) {
              pluginsList += navigator.plugins[i].name;
            } else {
              pluginsList += navigator.plugins[i].name + ", ";
            }
          }
          return pluginsList;
        }
        //
        // FONT METHODS
        //
        // Get Fonts.  Return a string containing a list of installed fonts.
      }, {
        key: "getFonts",
        value: function getFonts() {
          var fontArray = ["Abadi MT Condensed Light", "Adobe Fangsong Std", "Adobe Hebrew", "Adobe Ming Std", "Agency FB", "Aharoni", "Andalus", "Angsana New", "AngsanaUPC", "Aparajita", "Arab", "Arabic Transparent", "Arabic Typesetting", "Arial Baltic", "Arial Black", "Arial CE", "Arial CYR", "Arial Greek", "Arial TUR", "Arial", "Batang", "BatangChe", "Bauhaus 93", "Bell MT", "Bitstream Vera Serif", "Bodoni MT", "Bookman Old Style", "Braggadocio", "Broadway", "Browallia New", "BrowalliaUPC", "Calibri Light", "Calibri", "Californian FB", "Cambria Math", "Cambria", "Candara", "Castellar", "Casual", "Centaur", "Century Gothic", "Chalkduster", "Colonna MT", "Comic Sans MS", "Consolas", "Constantia", "Copperplate Gothic Light", "Corbel", "Cordia New", "CordiaUPC", "Courier New Baltic", "Courier New CE", "Courier New CYR", "Courier New Greek", "Courier New TUR", "Courier New", "DFKai-SB", "DaunPenh", "David", "DejaVu LGC Sans Mono", "Desdemona", "DilleniaUPC", "DokChampa", "Dotum", "DotumChe", "Ebrima", "Engravers MT", "Eras Bold ITC", "Estrangelo Edessa", "EucrosiaUPC", "Euphemia", "Eurostile", "FangSong", "Forte", "FrankRuehl", "Franklin Gothic Heavy", "Franklin Gothic Medium", "FreesiaUPC", "French Script MT", "Gabriola", "Gautami", "Georgia", "Gigi", "Gisha", "Goudy Old Style", "Gulim", "GulimChe", "GungSeo", "Gungsuh", "GungsuhChe", "Haettenschweiler", "Harrington", "Hei S", "HeiT", "Heisei Kaku Gothic", "Hiragino Sans GB", "Impact", "Informal Roman", "IrisUPC", "Iskoola Pota", "JasmineUPC", "KacstOne", "KaiTi", "Kalinga", "Kartika", "Khmer UI", "Kino MT", "KodchiangUPC", "Kokila", "Kozuka Gothic Pr6N", "Lao UI", "Latha", "Leelawadee", "Levenim MT", "LilyUPC", "Lohit Gujarati", "Loma", "Lucida Bright", "Lucida Console", "Lucida Fax", "Lucida Sans Unicode", "MS Gothic", "MS Mincho", "MS PGothic", "MS PMincho", "MS Reference Sans Serif", "MS UI Gothic", "MV Boli", "Magneto", "Malgun Gothic", "Mangal", "Marlett", "Matura MT Script Capitals", "Meiryo UI", "Meiryo", "Menlo", "Microsoft Himalaya", "Microsoft JhengHei", "Microsoft New Tai Lue", "Microsoft PhagsPa", "Microsoft Sans Serif", "Microsoft Tai Le", "Microsoft Uighur", "Microsoft YaHei", "Microsoft Yi Baiti", "MingLiU", "MingLiU-ExtB", "MingLiU_HKSCS", "MingLiU_HKSCS-ExtB", "Miriam Fixed", "Miriam", "Mongolian Baiti", "MoolBoran", "NSimSun", "Narkisim", "News Gothic MT", "Niagara Solid", "Nyala", "PMingLiU", "PMingLiU-ExtB", "Palace Script MT", "Palatino Linotype", "Papyrus", "Perpetua", "Plantagenet Cherokee", "Playbill", "Prelude Bold", "Prelude Condensed Bold", "Prelude Condensed Medium", "Prelude Medium", "PreludeCompressedWGL Black", "PreludeCompressedWGL Bold", "PreludeCompressedWGL Light", "PreludeCompressedWGL Medium", "PreludeCondensedWGL Black", "PreludeCondensedWGL Bold", "PreludeCondensedWGL Light", "PreludeCondensedWGL Medium", "PreludeWGL Black", "PreludeWGL Bold", "PreludeWGL Light", "PreludeWGL Medium", "Raavi", "Rachana", "Rockwell", "Rod", "Sakkal Majalla", "Sawasdee", "Script MT Bold", "Segoe Print", "Segoe Script", "Segoe UI Light", "Segoe UI Semibold", "Segoe UI Symbol", "Segoe UI", "Shonar Bangla", "Showcard Gothic", "Shruti", "SimHei", "SimSun", "SimSun-ExtB", "Simplified Arabic Fixed", "Simplified Arabic", "Snap ITC", "Sylfaen", "Symbol", "Tahoma", "Times New Roman Baltic", "Times New Roman CE", "Times New Roman CYR", "Times New Roman Greek", "Times New Roman TUR", "Times New Roman", "TlwgMono", "Traditional Arabic", "Trebuchet MS", "Tunga", "Tw Cen MT Condensed Extra Bold", "Ubuntu", "Umpush", "Univers", "Utopia", "Utsaah", "Vani", "Verdana", "Vijaya", "Vladimir Script", "Vrinda", "Webdings", "Wide Latin", "Wingdings"];
          var fontString = "";
          return fontString;
        }
        //
        // STORAGE METHODS
        //
        // Is Local Storage.  Check if local storage is enabled.
      }, {
        key: "isLocalStorage",
        value: function isLocalStorage() {
          try {
            return !!localStorage;
          } catch (e) {
            return true;
          }
        }
        // Is Session Storage.  Check if session storage is enabled.
      }, {
        key: "isSessionStorage",
        value: function isSessionStorage() {
          try {
            return !!sessionStorage;
          } catch (e) {
            return true;
          }
        }
        // Is Cookie.  Check if cookies are enabled.
      }, {
        key: "isCookie",
        value: function isCookie() {
          return navigator.cookieEnabled;
        }
        //
        // TIME METHODS
        //
        // Get Time Zone.  Return a string containing the time zone.
      }, {
        key: "getTimeZone",
        value: function getTimeZone() {
          var rightNow, myNumber, formattedNumber, result;
          rightNow = /* @__PURE__ */ new Date();
          myNumber = String(-(rightNow.getTimezoneOffset() / 60));
          if (myNumber < 0) {
            myNumber = myNumber * -1;
            formattedNumber = ("0" + myNumber).slice(-2);
            result = "-" + formattedNumber;
          } else {
            formattedNumber = ("0" + myNumber).slice(-2);
            result = "+" + formattedNumber;
          }
          return result;
        }
        //
        // LANGUAGE METHODS
        //
        // Get Language.  Return a string containing the user language.
      }, {
        key: "getLanguage",
        value: function getLanguage() {
          return navigator.language;
        }
        // Get System Language.  Return a string containing the system language.
      }, {
        key: "getSystemLanguage",
        value: function getSystemLanguage() {
          return navigator.language || window.navigator.language;
        }
        // Get Canvas Print.  Return a string containing the canvas URI data.
      }, {
        key: "getCanvasPrint",
        value: function getCanvasPrint() {
          var canvas = document.createElement("canvas");
          var ctx;
          try {
            ctx = canvas.getContext("2d");
          } catch (e) {
            return "";
          }
          var txt = "ClientJS,org <canvas> 1.0";
          ctx.textBaseline = "top";
          ctx.font = "14px 'Arial'";
          ctx.textBaseline = "alphabetic";
          ctx.fillStyle = "#f60";
          ctx.fillRect(125, 1, 62, 20);
          ctx.fillStyle = "#069";
          ctx.fillText(txt, 2, 15);
          ctx.fillStyle = "rgba(102, 204, 0, 0.7)";
          ctx.fillText(txt, 4, 17);
          return canvas.toDataURL();
        }
      }]);
      return ClientJS2;
    }();
    var clientJS = new ClientJS();
    var _default = clientJS;
    exports.default = _default;
  }
});

// node_modules/react-secure-storage/dist/fingerprint.js
var require_fingerprint = __commonJS({
  "node_modules/react-secure-storage/dist/fingerprint.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _envHelper = _interopRequireDefault(require_envHelper());
    var _fingerprint = _interopRequireDefault(require_fingerprint_lib());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var HASH_KEY = "E86E2612010258B35137";
    var getFingerprint = function getFingerprint2() {
      var HASH_KEY_CUSTOM = _envHelper.default.getHashKey() || HASH_KEY;
      if (typeof window === "undefined") return HASH_KEY_CUSTOM;
      return _fingerprint.default.getFingerprint() + HASH_KEY_CUSTOM;
    };
    var _default = getFingerprint;
    exports.default = _default;
  }
});

// node_modules/react-secure-storage/dist/encryption.js
var require_encryption = __commonJS({
  "node_modules/react-secure-storage/dist/encryption.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _encUtf = _interopRequireDefault(require_enc_utf8());
    var _aes = _interopRequireDefault(require_aes());
    var _fingerprint = _interopRequireDefault(require_fingerprint());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var EncryptionService = function() {
      function EncryptionService2() {
        _classCallCheck(this, EncryptionService2);
        _defineProperty(this, "secureKey", "");
        this.secureKey = (0, _fingerprint.default)();
      }
      _createClass(EncryptionService2, [{
        key: "encrypt",
        value: function encrypt(value) {
          return _aes.default.encrypt(value, this.secureKey).toString();
        }
        /**
         * Function to decrypt data
         * @param value
         * @returns
         */
      }, {
        key: "decrypt",
        value: function decrypt(value) {
          try {
            var bytes = _aes.default.decrypt(value, this.secureKey);
            return bytes.toString(_encUtf.default) || null;
          } catch (ex) {
            return null;
          }
        }
      }]);
      return EncryptionService2;
    }();
    var _default = EncryptionService;
    exports.default = _default;
  }
});

// node_modules/react-secure-storage/dist/localStorageHelpers.js
var require_localStorageHelpers = __commonJS({
  "node_modules/react-secure-storage/dist/localStorageHelpers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _encryption = _interopRequireDefault(require_encryption());
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null) return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    var KEY_PREFIX = (0, _utils.getSecurePrefix)();
    var getAllLocalStorageItems = function getAllLocalStorageItems2() {
      var localStorageItems = {};
      if (typeof window !== "undefined") {
        var encrypt = new _encryption.default();
        for (var _i = 0, _Object$entries = Object.entries(localStorage); _i < _Object$entries.length; _i++) {
          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];
          if (key.startsWith(KEY_PREFIX)) {
            var keyType = key.replace(KEY_PREFIX, "")[0];
            var parsedKey = key.replace(/[.][bjns][.]/, ".");
            var decryptedValue = encrypt.decrypt(value);
            var parsedValue = null;
            if (decryptedValue != null) switch (keyType) {
              case "b":
                parsedValue = decryptedValue === "true";
                break;
              case "j":
                try {
                  parsedValue = JSON.parse(decryptedValue);
                } catch (ex) {
                  parsedValue = null;
                }
                break;
              case "n":
                try {
                  parsedValue = Number(decryptedValue);
                } catch (ex) {
                  parsedValue = null;
                }
                break;
              default:
                parsedValue = decryptedValue;
            }
            localStorageItems[parsedKey] = parsedValue;
          }
        }
      }
      return localStorageItems;
    };
    var _default = getAllLocalStorageItems;
    exports.default = _default;
  }
});

// node_modules/react-secure-storage/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-secure-storage/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _encryption = _interopRequireDefault(require_encryption());
    var _localStorageHelpers = _interopRequireDefault(require_localStorageHelpers());
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    var KEY_PREFIX = (0, _utils.getSecurePrefix)();
    var getDataType = function getDataType2(value) {
      return _typeof(value) === "object" ? "j" : typeof value === "boolean" ? "b" : typeof value === "number" ? "n" : "s";
    };
    var getLocalKey = function getLocalKey2(key, value) {
      var keyType = getDataType(value);
      return KEY_PREFIX + "".concat(keyType, ".") + key;
    };
    var SecureLocalStorage = function() {
      function SecureLocalStorage2() {
        _classCallCheck(this, SecureLocalStorage2);
        _defineProperty(this, "_localStorageItems", {});
        this._localStorageItems = (0, _localStorageHelpers.default)();
      }
      _createClass(SecureLocalStorage2, [{
        key: "setItem",
        value: function setItem(key, value) {
          if (value === null || value === void 0) this.removeItem(key);
          else {
            var parsedValue = _typeof(value) === "object" ? JSON.stringify(value) : value + "";
            var parsedKeyLocal = getLocalKey(key, value);
            var parsedKey = KEY_PREFIX + key;
            if (key != null) this._localStorageItems[parsedKey] = value;
            var encrypt = new _encryption.default();
            localStorage.setItem(parsedKeyLocal, encrypt.encrypt(parsedValue));
          }
        }
        /**
         * Function to get value from secure local storage
         * @param key to get
         * @returns
         */
      }, {
        key: "getItem",
        value: function getItem(key) {
          var _this$_localStorageIt;
          var parsedKey = KEY_PREFIX + key;
          return (_this$_localStorageIt = this._localStorageItems[parsedKey]) !== null && _this$_localStorageIt !== void 0 ? _this$_localStorageIt : null;
        }
        /**
         * Function to remove item from secure local storage
         * @param key to be removed
         */
      }, {
        key: "removeItem",
        value: function removeItem(key) {
          var parsedKey = KEY_PREFIX + key;
          var value = this._localStorageItems[parsedKey];
          var parsedKeyLocal = getLocalKey(key, value);
          if (this._localStorageItems[parsedKey] !== void 0) delete this._localStorageItems[parsedKey];
          localStorage.removeItem(parsedKeyLocal);
        }
        /**
         * Function to clear secure local storage
         */
      }, {
        key: "clear",
        value: function clear() {
          this._localStorageItems = {};
          localStorage.clear();
        }
      }]);
      return SecureLocalStorage2;
    }();
    var secureLocalStorage = new SecureLocalStorage();
    var _default = secureLocalStorage;
    exports.default = _default;
  }
});
export default require_dist();
//# sourceMappingURL=react-secure-storage.js.map
